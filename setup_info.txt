the following information is mandatory in the readme (needs to be rephrased better):
1. Pull the docker images needed by circuitron to function properly:
- docker pull ghcr.io/shaurya-sethi/circuitron-kicad:latest
- docker pull ghcr.io/shaurya-sethi/circuitron-mcp:latest
- docker pull python:3.12-slim
2. create a .env file with the following variables set and run a container of the circuitron-mcp image:
- docker run --env-file .env -p 8051:8051 ghcr.io/shaurya-sethi/circuitron-mcp:latest
NOTE: You only need to do this for this image, the other two images do not require manual configuration

TRANSPORT=sse
HOST=0.0.0.0
PORT=8051

# Get your Open AI API Key by following these instructions -
# https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key
OPENAI_API_KEY=
MODEL_CHOICE=gpt-4.1-nano

USE_CONTEXTUAL_EMBEDDINGS=true
USE_HYBRID_SEARCH=true
USE_AGENTIC_RAG=true
USE_RERANKING=true
USE_KNOWLEDGE_GRAPH=true

LLM_MAX_CONCURRENCY=2
LLM_REQUEST_DELAY=0.5 


# Get your SUPABASE_URL from the API section of your Supabase project settings -
# https://supabase.com/dashboard/project/<your project ID>/settings/api
SUPABASE_URL=

# Get your SUPABASE_SERVICE_KEY from the API section of your Supabase project settings -
# https://supabase.com/dashboard/project/<your project ID>/settings/api
# On this page it is called the service_role secret.
SUPABASE_SERVICE_KEY=

# Neo4j Configuration for Knowledge Graph Tools

NEO4J_URI=

# Neo4j username (usually 'neo4j' for default installations)
NEO4J_USER=

# Neo4j password for your database instance
NEO4J_PASSWORD=

3. Additional info for setting up the mcp server:
- Use auradb to get a free neo4j database instance and use those connection details
- After creating a supabase account and getting the supabase url and service key, go to the `SQL Editor` and run the query in `crawled_pages.sql` to set up the schema.
4. Use your favourite coding agent like GitHub copilot to set up the knowledge base using your newly set up mcp server.
- Just add this mcp server using `Configure Tools` -> `Add More Tools...` -> `Add MCP Server` -> HTTP -> Enter url: http://localhost:8051/sse
- After adding the mcp server, and ensuring that it is running before telling copilot to:
  prompt: use the mcp server to crawl this url: https://devbisme.github.io/skidl/
- This should set up the skidl knowledge base.
- After that, use this prompt: use the mcp server to parse the following GitHub repository into neo4j: https://github.com/devbisme/skidl
- This should set up the knowledge graph for circuitron.

ALL THIS INFORMATION IS MANDATORY TO BE IN THE README TO GUIDE THE USERS IN SETTING UP THE DEPENDENCIES FOR CIRCUITRON TO FUNCTION.